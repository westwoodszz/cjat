document.addEventListener('DOMContentLoaded', () => {
    // –ß–∞—Å—Ç–∏—Ü—ã —Ñ–æ–Ω–∞
    function createParticle() {
        const particle = document.createElement('div');
        particle.innerHTML = ['üå∏', 'üíÆ', 'üå∫', 'üå∑'][Math.floor(Math.random()*4)];
        particle.style.position = 'fixed';
        particle.style.left = Math.random() * window.innerWidth + 'px';
        particle.style.fontSize = Math.random() * 20 + 10 + 'px';
        particle.style.animation = `float ${3 + Math.random() * 4}s infinite`;
        document.getElementById('particles').appendChild(particle);
        setTimeout(() => particle.remove(), 5000);
    }

    // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–∞–º
    document.body.addEventListener('click', (e) => {
        if(e.target.closest('.neumorphic-btn')) {
            createHearts(e);
        }
    });

    // –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–µ—Ä–¥–µ—á–µ–∫
    function createHearts(e) {
        for(let i = 0; i < 7; i++) {
            const heart = document.createElement('div');
            heart.innerHTML = '‚ù§Ô∏è';
            heart.style.position = 'fixed';
            heart.style.left = e.clientX + 'px';
            heart.style.top = e.clientY + 'px';
            heart.style.fontSize = Math.random() * 30 + 20 + 'px';
            heart.style.animation = `heartFloat ${1 + i/2}s ease-out`;
            document.getElementById('heartsContainer').appendChild(heart);
            setTimeout(() => heart.remove(), 1000);
        }
    }

    // –°–µ–∫—Ä–µ—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    document.querySelectorAll('[data-action="secret"]').forEach(btn => {
        btn.addEventListener('click', () => {
            const secrets = [
                "–ø–æ–º–Ω—é –∫–∞–∫ —É–≤–∏–¥–µ–ª –∑–≤–µ–∑–¥—ã –≤ —Ç–≤–æ–∏—Ö –≥–ª–∞–∑–∞—Ö, –±–æ–ª—å—à–µ –Ω–µ –∑–∞–≤–∏–¥—É—é –≥–∞–≥–∞—Ä–∏–Ω—É",
                "–ª—é–±–ª—é —Ç–µ–±—è –æ—á–µ–Ω—å!!!",
                "—Ç—ã –ø—Ä–µ–≤—Ä–∞—â–∞–µ—à—å –æ–±—ã—á–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –≤ –º–∞–≥–∏—é",
                "‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è"
            ];
            document.getElementById('secretText').textContent = secrets[Math.floor(Math.random()*secrets.length)];
            document.getElementById('secretModal').style.display = 'block';
        });
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–æ–∫
    document.querySelector('.modal-close').addEventListener('click', () => {
        document.getElementById('secretModal').style.display = 'none';
    });

    // –ì–∞–ª–µ—Ä–µ—è —Ñ–æ—Ç–æ
    document.querySelector('[data-action="memories"]').addEventListener('click', () => {
        document.querySelectorAll('.photo-card').forEach(card => {
            card.classList.add('active');
        });
    });

    document.querySelectorAll('.close-photo').forEach(btn => {
        btn.addEventListener('click', (e) => {
            e.target.closest('.photo-card').classList.remove('active');
        });
    });

    // –ú–∏–Ω–∏-–∏–≥—Ä–∞
    let score = 0;
    let gameInterval;
    let gameContainer;
    let animationStyle;

    document.querySelector('[data-action="surprise"]').addEventListener('click', () => {
        score = 0;
        if(gameContainer) gameContainer.remove();
        if(animationStyle) animationStyle.remove();
        
        animationStyle = document.createElement('style');
        animationStyle.textContent = `@keyframes fall { from { top: -50px; } to { top: 100%; } }`;
        document.head.appendChild(animationStyle);

        gameContainer = document.createElement('div');
        gameContainer.className = 'game-modal';
        gameContainer.innerHTML = `
            <div class="game-content">
                <h2>–ø–æ–π–º–∞–π —Å–µ—Ä–¥–µ—á–∫–∏! üíò</h2>
                <div class="score">–°–æ–±—Ä–∞–Ω–æ: ${score}</div>
                <div class="hearts-field"></div>
                <button class="game-close">&times;</button>
            </div>
        `;

        gameContainer.querySelector('.game-close').addEventListener('click', () => {
            gameContainer.remove();
            clearInterval(gameInterval);
            animationStyle.remove();
        });

        const heartsField = gameContainer.querySelector('.hearts-field');
        const messages = ['—É–º–Ω–∏—á–∫–∞! üòç', '—Ç–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! üí™', '—Ç—ã –ª—É—á—à–∞—èüèÜ', '–≥–æ—Ä–∂—É—Å—å —Ç–æ–±–æ–π!!üíñ'];
        
        function createHeart() {
            const heart = document.createElement('div');
            heart.className = 'falling-heart';
            heart.innerHTML = 'üíñ';
            heart.style.left = Math.random() * 90 + '%';
            
            heart.addEventListener('click', () => {
                if(!heart.classList.contains('caught')) {
                    score++;
                    heart.classList.add('caught');
                    heart.style.animation = 'none';
                    heart.style.transform = 'scale(1.5) rotate(360deg)';
                    gameContainer.querySelector('.score').textContent = `–°–æ–±—Ä–∞–Ω–æ: ${score}`;
                    
                    if(score >= 30) {
                        const winModal = document.createElement('div');
                        winModal.className = 'win-modal';
                        winModal.innerHTML = `
                            <div class="win-content">
                                <h2>–°–æ—Ñ–∞, —Ç—ã —É–º–Ω–∏—Ü–∞! üéâ</h2>
                                <p>–¢—ã —Å–æ–±—Ä–∞–ª–∞ –≤—Å–µ 30 —Å–µ—Ä–¥–µ—á–µ–∫!</p>
                                <button class="win-close">–ó–∞–∫—Ä—ã—Ç—å</button>
                            </div>
                        `;
                        
                        winModal.querySelector('.win-close').addEventListener('click', () => {
                            winModal.remove();
                            gameContainer.remove();
                            clearInterval(gameInterval);
                            animationStyle.remove();
                        });
                        
                        document.body.appendChild(winModal);
                        clearInterval(gameInterval);
                    } else if(score % 10 === 0) {
                        const toast = document.createElement('div');
                        toast.className = 'game-toast';
                        toast.textContent = messages[Math.floor(Math.random()*messages.length)];
                        heartsField.appendChild(toast);
                        setTimeout(() => toast.remove(), 2000);
                    }
                }
                setTimeout(() => heart.remove(), 300);
            });

            heartsField.appendChild(heart);
        }

        gameInterval = setInterval(createHeart, 800);
        document.body.appendChild(gameContainer);
    });

    // –ü–µ—á–∞—Ç–Ω–∞—è –º–∞—à–∏–Ω–∫–∞
    function typeWriter(element, text, i = 0) {
        if (i < text.length) {
            element.innerHTML += text.charAt(i);
            setTimeout(() => typeWriter(element, text, i + 1), 50);
        }
    }

    typeWriter(document.getElementById('mainMessage'), 
        "–ü—Ä–∏–≤–µ—Ç, –º–æ—è –ª—é–±–∏–º–∞—è!!! —è –ø–æ—Ç—Ä–∞—Ç–∏–ª –º–Ω–æ–≥–æ —Å–∏–ª, –∏ —Ö–æ—á—É —Å–∫–∞–∑–∞—Ç—å, –∫–∞–∫ –∂–µ —è —Ç–µ–±—è –≤—Å–µ —Ç–∞–∫–∏ –ª—é–±–ª—é!üíï");

    // –§–æ–Ω–æ–≤–∞—è –∞–Ω–∏–º–∞—Ü–∏—è
    setInterval(createParticle, 800);
});